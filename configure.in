
AC_INIT([ncdc], [0.1], [projects@yorhel.nl])
AC_CONFIG_HEADER([config.h])
AM_INIT_AUTOMAKE([foreign])


# Check for programs.
AC_PROG_CC
AC_PROG_INSTALL
AC_PROG_RANLIB


# I want a large st_size in struct stat!
AC_SYS_LARGEFILE


# Check for makeheaders
AC_CHECK_PROG([have_mh],[makeheaders],[yes])
if test -z "$have_mh"; then
  AC_MSG_ERROR([Could not find the makeheaders program.])
fi


# Check for header files.
AC_CHECK_HEADERS(
  [wchar.h locale.h signal.h bzlib.h gdbm.h],[],
  AC_MSG_ERROR([Required header file not found]))

have_nch=no
AC_CHECK_HEADERS([ncursesw/ncurses.h ncurses.h],[have_nch=yes])
if test "x$have_nch" = "xno"; then
  AC_MSG_ERROR([Could not find a header files for ncurses.])
fi


# Check for library functions.
AC_CHECK_FUNCS(
  [setlocale sigaction],[],
  AC_MSG_ERROR([Required function missing]))


# Check for ncursesw
AC_CHECK_LIB([ncursesw],
             [get_wch],
             [LIBS="$LIBS -lncursesw"],
             [AC_MSG_ERROR(ncursesw library is required)])

# Check for libbz2
AC_CHECK_LIB([bz2],
             [BZ2_bzReadOpen],
             [LIBS="$LIBS -lbz2"],
             [AC_MSG_ERROR(bzip2 library is required)])

# Check for gdbm
AC_CHECK_LIB([gdbm],
             [gdbm_open],
             [LIBS="$LIBS -lgdbm"],
             [AC_MSG_ERROR(gdbm library is required)])

# Check for modules (We assume gthread and gio come from the same glib version)
PKG_CHECK_MODULES([DEPS], [
  glib-2.0 >= 2.24
  gthread-2.0
  gio-2.0
  libxml-2.0
])


AC_OUTPUT([Makefile])

