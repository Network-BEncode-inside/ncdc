
AC_INIT([ncdc], [0.8g], [projects@yorhel.nl])
AC_CONFIG_SRCDIR([src/ncdc.h])
AC_CONFIG_HEADER([config.h])
AM_INIT_AUTOMAKE([foreign])


# Check for programs.
AC_PROG_CC
AC_PROG_INSTALL
AC_PROG_RANLIB

AC_SYS_LARGEFILE


# Use silent building
m4_ifdef([AM_SILENT_RULES], [AM_SILENT_RULES([yes])])


# Check for makeheaders. Not having makeheaders is fatal if no header files are
# present in this distribution. (Only main.h is checked, though)
AC_CHECK_PROG([have_mh],[makeheaders],[yes],[no])
if test \( "x$have_mh" = "xno" \) -a \( ! -f "$srcdir/src/main.h" \) ; then
  AC_MSG_ERROR([Could not find the makeheaders program.])
fi
AM_CONDITIONAL([USE_MH], [test "x$have_mh" = "xyes"])


# Check for header files.
AC_CHECK_HEADERS(
  [wchar.h locale.h signal.h bzlib.h gdbm.h sys/types.h sys/stat.h],[],
  AC_MSG_ERROR([Required header file not found]))

have_nch=no
AC_CHECK_HEADERS([ncursesw/ncurses.h ncurses.h],[have_nch=yes])
if test "x$have_nch" = "xno"; then
  AC_MSG_ERROR([Could not find a header files for ncurses.])
fi


# Require a large off_t
AC_CHECK_SIZEOF([off_t])
if test "$ac_cv_sizeof_off_t" -lt 8; then
  AC_MSG_ERROR([No large file support available in this system.])
fi


# Check for library functions.
AC_CHECK_FUNCS(
  [setlocale sigaction],[],
  AC_MSG_ERROR([Required function missing]))



# Check for sendfile() support (not required)
# The following checks are based on ProFTPD's configure.in, except ncdc only
# supports the Linux and BSD variant at the moment, as those are the only two I
# have tested so far.

AC_CACHE_CHECK([which sendfile() implementation to use], pr_cv_sendfile_func,
  pr_cv_sendfile_func="none"

  # Linux
  if test "$pr_cv_sendfile_func" = "none"; then
    AC_LINK_IFELSE([AC_LANG_PROGRAM(
      [[ #include <sys/types.h>
         #include <sys/sendfile.h>
         #include <unistd.h> ]],
      [[ int i=0;
         off_t o=0;
         size_t c=0;
         (void)sendfile(i,i,&o,c); ]])],
      [pr_cv_sendfile_func="Linux"])
  fi

  # BSD
  if test "$pr_cv_sendfile_func" = "none"; then
    AC_LINK_IFELSE([AC_LANG_PROGRAM(
      [[ #include <sys/types.h>
         #include <sys/socket.h>
         #include <sys/uio.h> ]],
      [[ int i=0;
         off_t o=0;
         size_t n=0;
         struct sf_hdtr h={};
         (void)sendfile(i,i,o,n,&h,&o,i); ]])],
      [pr_cv_sendfile_func="BSD"])
  fi
)

# set defines
if test "$pr_cv_sendfile_func" != none; then
  AC_DEFINE(HAVE_SENDFILE, 1, [Define if sendfile support.])
fi

case "$pr_cv_sendfile_func" in
  "Linux")
    AC_DEFINE(HAVE_LINUX_SENDFILE, 1, [Define if using Linux sendfile support.]);;
  "BSD")
    AC_DEFINE(HAVE_BSD_SENDFILE,   1, [Define if using BSD sendfile support.]);;
esac



# Check for ncursesw
AC_CHECK_LIB([ncursesw],
             [get_wch],
             [LIBS="$LIBS -lncursesw"],
             [AC_MSG_ERROR(ncursesw library is required)])

# Check for libbz2
AC_CHECK_LIB([bz2],
             [BZ2_bzReadOpen],
             [LIBS="$LIBS -lbz2"],
             [AC_MSG_ERROR(bzip2 library is required)])

# Check for gdbm
AC_CHECK_LIB([gdbm],
             [gdbm_open],
             [LIBS="$LIBS -lgdbm"],
             [AC_MSG_ERROR(gdbm library is required)])

# Check for modules (We assume gthread and gio come from the same glib version)
PKG_CHECK_MODULES([DEPS], [
  glib-2.0 >= 2.24
  gthread-2.0
  gio-unix-2.0
  libxml-2.0
])


have_tls=no
PKG_CHECK_EXISTS([gio-2.0 >= 2.28], [have_tls=yes])


AC_OUTPUT([GNUmakefile src/GNUmakefile util/GNUmakefile])


# Notify user about missing makeheaders
if test "x$have_mh" = "xno"; then
  echo ""
  echo "WARNING: Could not find the makeheaders program."
  echo " If you wish to make non-trivial changes to the source code, you"
  echo " may want to install makeheaders and re-run this configure script."
  echo ""
fi


# Information about TLS support
echo ""
if test "x$have_tls" = "xyes"; then
  echo "TLS support: enabled."
  echo "  Install glib-networking to make use of it."
else
  echo "TLS support: disabled (too old glib version)."
fi
echo ""

